(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{129:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return u}));var r=t(1),a=t(6),l=(t(0),t(147)),o={id:"research",title:"Research Papers"},c={id:"research",title:"Research Papers",description:"Please cite our work if GBBS contributes to your academic publication:",source:"@site/docs/research.md",permalink:"/gbbs/docs/research"},i=[{value:"Resources",id:"resources",children:[]}],p={rightToc:i};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Please cite our work if GBBS contributes to your academic publication:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"@inproceedings{dhulipala2018theoretically,\n  author    = {Laxman Dhulipala and\n               Guy E. Blelloch and\n               Julian Shun},\n  title     = {Theoretically Efficient Parallel Graph Algorithms Can Be Fast and\n               Scalable},\n  booktitle = {ACM Symposium on Parallelism in Algorithms and Architectures (SPAA)},\n  pages     = {293--304}\n  year      = {2018},\n}\n\n@inproceedings{dhulipala20grades,\n  author    = {Laxman Dhulipala and\n               Jessica Shi and\n               Tom Tseng and\n               Guy E. Blelloch and\n               Julian Shun},\n  title     = {The Graph Based Benchmark Suite {(GBBS)}},\n  year      = {2020},\n  booktitle = {International Workshop on Graph Data Management Experiences and Systems\n               (GRADES) and Network Data Analytics (NDA)},\n  pages     = {11:1--11:8}\n}\n")),Object(l.b)("h3",{id:"resources"},"Resources"),Object(l.b)("p",null,"Laxman Dhulipala, Guy Blelloch, and Julian Shun",Object(l.b)("br",null),"\n",Object(l.b)("em",{parentName:"p"},"Theoretically Efficient Parallel Graph Algorithms Can Be Fast and Scalable"),Object(l.b)("br",null),"\nProceedings of the ACM Symposium on Parallelism in Algorithms and Architectures (SPAA), pp. 393-404, 2018. ",Object(l.b)("br",null),"\n",Object(l.b)("strong",{parentName:"p"},"Best Paper Award"),Object(l.b)("br",null),"\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://ldhulipala.github.io/papers/gbbs_topc.pdf"}),"Full Version")," | ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://ldhulipala.github.io/papers/gbbs-spaa-2018.pdf"}),"Conference Version")),Object(l.b)("p",null,"Laxman Dhulipala, Jessica Shi, Tom Tseng, Guy Blelloch, and Julian Shun",Object(l.b)("br",null),"\n",Object(l.b)("em",{parentName:"p"},"The Graph Based Benchmark Suite (GBBS)"),Object(l.b)("br",null),"\nProceedings of the Joint Workshop on Graph Data Management Experiences & Systems (GRADES) and Network Data Analytics (NDA), pp. 1-8, 2020.",Object(l.b)("br",null),"\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://ldhulipala.github.io/papers/gbbs.pdf"}),"Conference Version")),Object(l.b)("p",null,"Tom Tseng, Laxman Dhulipala, and Julian Shun",Object(l.b)("br",null),"\n",Object(l.b)("em",{parentName:"p"},"Parallel Index-Based Structural Graph Clustering and Its Approximation"),Object(l.b)("br",null),"\nTo appear in Proceedings of the ACM SIGMOD International Conference on Management of Data (SIGMOD), 2021.",Object(l.b)("br",null),"\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://arxiv.org/abs/2012.11188"}),"arXiv Version")),Object(l.b)("p",null,"Laxman Dhulipala, Quanquan Liu, Julian Shun, and Shangdi Yu",Object(l.b)("br",null),"\n",Object(l.b)("em",{parentName:"p"},"Parallel Batch-Dynamic k-Clique Counting"),Object(l.b)("br",null),"\nProceedings of the SIAM Symposium on Algorithmic Principles of Computer Systems (APOCS), pp. 129-143, 2021.",Object(l.b)("br",null),"\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://ldhulipala.github.io/papers/dynamic-clique.pdf"}),"Conference Version")," | ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://arxiv.org/abs/2003.13585"}),"arXiv Version")))}u.isMDXComponent=!0},147:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),u=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},b=function(e){var n=u(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},h=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=u(t),h=r,m=b["".concat(o,".").concat(h)]||b[h]||s[h]||l;return t?a.a.createElement(m,c({ref:n},p,{components:t})):a.a.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=h;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<l;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);