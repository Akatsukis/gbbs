(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{120:function(e,a,t){"use strict";t.d(a,"a",(function(){return l})),t.d(a,"b",(function(){return h}));var n=t(0),s=t.n(n);function m(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){m(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},m=Object.keys(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var b=s.a.createContext({}),i=function(e){var a=s.a.useContext(b),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},l=function(e){var a=i(e.components);return s.a.createElement(b.Provider,{value:a},e.children)},N={inlineCode:"code",wrapper:function(e){var a=e.children;return s.a.createElement(s.a.Fragment,{},a)}},o=s.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,m=e.originalType,p=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),l=i(t),o=n,h=l["".concat(p,".").concat(o)]||l[o]||N[o]||m;return t?s.a.createElement(h,r(r({ref:a},b),{},{components:t})):s.a.createElement(h,r({ref:a},b))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var m=t.length,p=new Array(m);p[0]=o;var r={};for(var c in a)hasOwnProperty.call(a,c)&&(r[c]=a[c]);r.originalType=e,r.mdxType="string"==typeof e?e:n,p[1]=r;for(var b=2;b<m;b++)p[b]=t[b];return s.a.createElement.apply(null,p)}return s.a.createElement.apply(null,t)}o.displayName="MDXCreateElement"},124:function(e,a,t){"use strict";t.d(a,"b",(function(){return m})),t.d(a,"a",(function(){return p}));var n=t(16),s=t(128);function m(){const{siteConfig:{baseUrl:e="/",url:a}={}}=Object(n.default)();return{withBaseUrl:(t,n)=>function(e,a,t,{forcePrependBaseUrl:n=!1,absolute:m=!1}={}){if(!t)return t;if(t.startsWith("#"))return t;if(Object(s.b)(t))return t;if(n)return a+t;const p=t.startsWith(a)?t:a+t.replace(/^\//,"");return m?e+p:p}(a,e,t,n)}}function p(e,a={}){const{withBaseUrl:t}=m();return t(e,a)}},128:function(e,a,t){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function s(e){return void 0!==e&&!n(e)}t.d(a,"b",(function(){return n})),t.d(a,"a",(function(){return s}))},66:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return p})),t.d(a,"metadata",(function(){return r})),t.d(a,"toc",(function(){return c})),t.d(a,"default",(function(){return i}));var n=t(3),s=(t(0),t(120)),m=t(124);const p={id:"kcore_tutorial",title:"KCore"},r={unversionedId:"tutorial/kcore_tutorial",id:"tutorial/kcore_tutorial",isDocsHomePage:!1,title:"KCore",description:"At this point, you should be familiar with some of the basic features",source:"@site/docs/tutorial/kcore_tutorial.mdx",slug:"/tutorial/kcore_tutorial",permalink:"/gbbs/docs/tutorial/kcore_tutorial",version:"current",sidebar:"docs",previous:{title:"BFS",permalink:"/gbbs/docs/tutorial/bfs_tutorial"},next:{title:"Publications and Resources",permalink:"/gbbs/docs/research"}},c=[{value:"Definitions",id:"definitions",children:[]},{value:"The Peeling Algorithm",id:"the-peeling-algorithm",children:[]},{value:"Getting Started",id:"getting-started",children:[]},{value:"Implementing the Parallel Peeling Algorithm",id:"implementing-the-parallel-peeling-algorithm",children:[{value:"Initializing the Bucketing Structure",id:"initializing-the-bucketing-structure",children:[]},{value:"Bucketing: NextBucket",id:"bucketing-nextbucket",children:[]},{value:"Updating the Induced Degrees",id:"updating-the-induced-degrees",children:[]},{value:"Updating the Buckets",id:"updating-the-buckets",children:[]}]},{value:"The Finished Application",id:"the-finished-application",children:[]},{value:"Compilation",id:"compilation",children:[]},{value:"Testing",id:"testing",children:[]},{value:"References",id:"references",children:[]}],b={toc:c};function i({components:e,...a}){return Object(s.b)("wrapper",Object(n.a)({},b,a,{components:e,mdxType:"MDXLayout"}),Object(s.b)("p",null,"At this point, you should be familiar with some of the basic features\nof the GBBS library such as the ",Object(s.b)("inlineCode",{parentName:"p"},"vertexSubset")," datatype and core parts\nof the API such as ",Object(s.b)("inlineCode",{parentName:"p"},"edgeMap"),". For examples of how to use this, please\nrefer to either the ",Object(s.b)("a",{parentName:"p",href:"/docs/tutorial/bfs_tutorial"},"previous tutorial"),"\nor the API reference."),Object(s.b)("p",null,"In this tutorial, we will introduce and use other parts of the GBBS\nlibrary such as the ",Object(s.b)("em",{parentName:"p"},"bucketing")," data structure and the ",Object(s.b)("inlineCode",{parentName:"p"},"nghCount"),"\nprimitive in order to compute the ",Object(s.b)("em",{parentName:"p"},"k-core")," of a graph. The\nimplementation we describe is presented in more detail in ","[1, 2]","."),Object(s.b)("h3",{id:"definitions"},"Definitions"),Object(s.b)("p",null,"Given ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"G"),Object(s.b)("mo",{parentName:"mrow"},"="),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"V"),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("mi",{parentName:"mrow"},"E"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"G = (V, E)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"G"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"="),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.22222em"}},"V"),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.05764em"}},"E"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," the ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),"-core of ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"G")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"G")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"G")))))," is the maximal set of vertices\n",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"S"),Object(s.b)("mo",{parentName:"mrow"},"\u2282"),Object(s.b)("mi",{parentName:"mrow"},"V")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"S \\subset V")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.72243em",verticalAlign:"-0.0391em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.05764em"}},"S"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"\u2282"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.22222em"}},"V")))))," s.t. the degree for ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow"},"\u2208"),Object(s.b)("mi",{parentName:"mrow"},"S")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v \\in S")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"\u2208"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.05764em"}},"S")))))," in ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"G"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"["),Object(s.b)("mi",{parentName:"mrow"},"S"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"]")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"G[S]")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"G"),Object(s.b)("span",{parentName:"span",className:"mopen"},"["),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.05764em"}},"S"),Object(s.b)("span",{parentName:"span",className:"mclose"},"]")))))," (the induced\nsubgraph of ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"G")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"G")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"G")))))," over ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"S")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"S")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.05764em"}},"S"))))),") is at least ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),". These objects have been\nuseful in the study of social networks and bioinformatics, and have\nnatural applications in the visualization of complex networks."),Object(s.b)("div",{style:{textAlign:"center"}},Object(s.b)("img",{alt:"kcore-figure",width:"400",src:Object(m.a)("/img/kcore/kcore_figure.svg")})),"\xa0",Object(s.b)("p",null,"For instance in the figure above the 1-core consists of all vertices\nwith degree at least 1 (all of the vertices in this example). The\nvertices in the 2-core are computed by recursively deleting vertices\nwith degree less than 2 until all vertices remaining have degree at\nleast 2. The 3-core is computed similarly, by deleting vertices with\ndegree less than 3. The largest core in this example is the\n3-core."),Object(s.b)("p",null,"In the ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("span",{parentName:"strong",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),"-core problem"),", the goal is to produce a map, ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"f"),Object(s.b)("mo",{parentName:"mrow"},":"),Object(s.b)("mi",{parentName:"mrow"},"V"),Object(s.b)("mo",{parentName:"mrow"},"\u2192"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"double-struck"},"N")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f : V \\rightarrow \\mathbb{N}")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.10764em"}},"f"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},":"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.22222em"}},"V"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"\u2192"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68889em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathbb"},"N"))))))," s.t. for ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow"},"\u2208"),Object(s.b)("mi",{parentName:"mrow"},"V")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v \\in V")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"\u2208"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.22222em"}},"V"))))),", ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"f"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(v)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.10764em"}},"f"),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," is the maximum core\nthat ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"v")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v")))))," is a part of. We refer to ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"f"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(v)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.10764em"}},"f"),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," as the ",Object(s.b)("strong",{parentName:"p"},"coreness")," of ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"v")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"))))),".\nA commonly used measure is the ",Object(s.b)("strong",{parentName:"p"},"degeneracy")," of a graph, which is\njust the maximum non-empty core that ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"G")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"G")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"G")))))," supports."),Object(s.b)("h3",{id:"the-peeling-algorithm"},"The Peeling Algorithm"),Object(s.b)("p",null,"In this tutorial we will implement a parallel implementation of the\nclassic ",Object(s.b)("em",{parentName:"p"},"peeling algorithm")," due to Matula and Beck (1983) (the same\nalgorithm has been implicitly described in the work of Anderson and\nMayr (1984))."),Object(s.b)("p",null,"The ",Object(s.b)("strong",{parentName:"p"},"sequential peeling algorithm")," is very simple. It first\nbucket-sorts vertices by their degree, and then repeatedly deletes the\nminimum-degree vertex. The affected neighbors are moved to a new\nbucket corresponding to their induced degree. As each edge in each\ndirection and each vertex is processed exactly once, the algorithm\nruns in ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"O"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"m"),Object(s.b)("mo",{parentName:"mrow"},"+"),Object(s.b)("mi",{parentName:"mrow"},"n"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(m + n)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.02778em"}},"O"),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"m"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),Object(s.b)("span",{parentName:"span",className:"mbin"},"+"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"n"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," work."),Object(s.b)("p",null,"We will implement a ",Object(s.b)("strong",{parentName:"p"},"parallel peeling algorithm")," based on this idea.\nThe algorithm works as follows at a high level. It stores the vertices\nin a set of ",Object(s.b)("em",{parentName:"p"},"buckets")," which correspond to their induced degree. In\neach parallel step, the algorithm peels all vertices in the smallest\nnon-empty bucket (let this bucket number be ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),"), and assigns these\nvertices to have a coreness of ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),". It then updates the induced\ndegrees of the neighbors of the peeled vertices, and moves them into a\nbucket corresponding to their new induced degree. Note that if the\ninduced degree of a vertex falls below the current bucket being\npeeled, ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),", the vertex is moved to bucket ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),". The algorithm\nterminates once all vertices are peeled. Later we will argue that our\nimplementation of this algorithm runs in ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"O"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"m"),Object(s.b)("mo",{parentName:"mrow"},"+"),Object(s.b)("mi",{parentName:"mrow"},"n"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(m + n)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.02778em"}},"O"),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"m"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),Object(s.b)("span",{parentName:"span",className:"mbin"},"+"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"n"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," expected work and\n",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"O"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"\u03c1"),Object(s.b)("mi",{parentName:"mrow"},"log"),Object(s.b)("mo",{parentName:"mrow"},"\u2061"),Object(s.b)("mi",{parentName:"mrow"},"n"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\rho \\log n)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.02778em"}},"O"),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"\u03c1"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mop"},"lo",Object(s.b)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"n"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," depth w.h.p. where ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"\u03c1")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\rho")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"\u03c1")))))," is the ",Object(s.b)("strong",{parentName:"p"},"peeling\ncomplexity")," of the graph, defined as the number of rounds to peel the\ngraph to an empty graph where each peeling step removes all minimum\ndegree vertices."),Object(s.b)("h3",{id:"getting-started"},"Getting Started"),Object(s.b)("p",null,"Let's get started! ",Object(s.b)("inlineCode",{parentName:"p"},"cd")," into the ",Object(s.b)("inlineCode",{parentName:"p"},"/benchmarks/kcore/")," directory and\ncreate a new directory called ",Object(s.b)("inlineCode",{parentName:"p"},"kcore_tutorial"),". Create three files in\nthis directory: ",Object(s.b)("inlineCode",{parentName:"p"},"BUILD"),", ",Object(s.b)("inlineCode",{parentName:"p"},"KCore.cc")," and ",Object(s.b)("inlineCode",{parentName:"p"},"KCore.h"),". We will start by\nfilling in some easy content in the ",Object(s.b)("inlineCode",{parentName:"p"},"BUILD")," and ",Object(s.b)("inlineCode",{parentName:"p"},"KCore.cc")," files."),Object(s.b)("p",null,"Add the following to the ",Object(s.b)("inlineCode",{parentName:"p"},"BUILD")," file."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},'cc_library(\n  name = "KCore",\n  hdrs = ["KCore.h"],\n  deps = [\n  "//gbbs:gbbs",\n  "//gbbs:julienne",\n  ]\n)\n\ncc_binary(\n  name = "KCore_main",\n  srcs = ["KCore.cc"],\n  deps = [":KCore"]\n)\n\npackage(\n  default_visibility = ["//visibility:public"],\n)\n')),Object(s.b)("p",null,"And add the following to the ",Object(s.b)("inlineCode",{parentName:"p"},"KCore.cc")," file."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},'#include "KCore.h"\n\nnamespace gbbs {\n\ntemplate <class Graph>\ndouble KCore_runner(Graph& G, commandLine P) {\n  size_t num_buckets = P.getOptionLongValue("-nb", 16);\n  std::cout << "### Application: KCore" << std::endl;\n  std::cout << "### Graph: " << P.getArgument(0) << std::endl;\n  std::cout << "### Threads: " << num_workers() << std::endl;\n  std::cout << "### n: " << G.n << std::endl;\n  std::cout << "### m: " << G.m << std::endl;\n  std::cout << "### Params: -nb (num_buckets) = " << num_buckets << std::endl;\n  std::cout << "### ------------------------------------" << std::endl;\n\n  timer t; t.start();\n  auto cores = KCore(G, num_buckets);\n  double tt = t.stop();\n\n  std::cout << "### Running Time: " << tt << std::endl;\n  return tt;\n}\n\n}  // namespace gbbs\n\ngenerate_symmetric_main(gbbs::KCore_runner, false);\n')),Object(s.b)("p",null,"Thus far we have simply set up the skeleton of the k-core\nimplementation. The runner program in ",Object(s.b)("inlineCode",{parentName:"p"},"KCore.cc")," specifies that it\nruns on a symmetric graph (either compressed or uncompressed), and\nrequires a parameter called ",Object(s.b)("inlineCode",{parentName:"p"},"num_buckets (-nb)")," which we will discuss\nshortly."),Object(s.b)("h2",{id:"implementing-the-parallel-peeling-algorithm"},"Implementing the Parallel Peeling Algorithm"),Object(s.b)("p",null,"Add the following skeleton to ",Object(s.b)("inlineCode",{parentName:"p"},"KCore.h")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n\n#include "gbbs/gbbs.h"\n#include "gbbs/julienne.h"\n\nnamespace gbbs {\n\ntemplate <class Graph>\ninline sequence<uintE> KCore(Graph& G, size_t num_buckets = 16) {\n  const uintE n = G.n;\n  auto D = sequence<uintE>(n, [&](size_t i) {\n    return G.get_vertex(i).out_degree(); });\n\n  return D;\n}\n')),Object(s.b)("p",null,"So far the code doesn't do much. The signature for the ",Object(s.b)("inlineCode",{parentName:"p"},"KCore"),"\nfunction tells us that it accepts as input a graph and the number of\nbuckets, and returns a sequence of integers representing the coreness\nnumber of each vertex. Inside the function body, the main point of\ninterest is the array ",Object(s.b)("inlineCode",{parentName:"p"},"D"),", which will store the coreness values. The\narray initializes the coreness values to degree of each vertex in the\ngraph."),Object(s.b)("h3",{id:"initializing-the-bucketing-structure"},"Initializing the Bucketing Structure"),Object(s.b)("p",null,"The next step in the algorithm before performing the peeling\ncomputation is to initialize a ",Object(s.b)("strong",{parentName:"p"},"bucketing structure")," that will\nmaintain a dynamic mapping between a set of identifiers (the vertices)\nand their bucket (representing their current induced degree)."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"auto B = make_vertex_buckets(n, D, increasing, num_buckets);\n")),Object(s.b)("p",null,"This declaration creates a bucketing structure, ",Object(s.b)("inlineCode",{parentName:"p"},"B"),", containing"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"n")," specifies the number of identifiers"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"D")," specifies the mapping from identifier to its current bucket number"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"increasing")," specifies that the buckets are processed in ",Object(s.b)("em",{parentName:"li"},"increasing")," order (smallest to largest)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"num_buckets")," specifies the number of ",Object(s.b)("em",{parentName:"li"},"open buckets")," to maintain")),Object(s.b)("h3",{id:"bucketing-nextbucket"},"Bucketing: NextBucket"),Object(s.b)("p",null,"Next, now that the bucketing structure is initialized, we will\nimplement the main peeling portion of the algorithm. The first step in\npeeling is to loop while all vertices have not yet been processed, and\nextract all of the vertices in the next non-empty bucket. Add the\nfollowing loop after the initialization of the bucketing structure, ",Object(s.b)("inlineCode",{parentName:"p"},"B"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"uintE finished = 0, rho = 0, k_max = 0;\nwhile (finished != n) {\n  auto bkt = B.next_bucket();\n  auto active = vertexSubset(n, std::move(bkt.identifiers));\n  uintE k = bkt.id;\n  k_max = k;\n  rho++;\n  finished += active.size();\n}\n")),Object(s.b)("p",null,"As described above, this code will loop until all vertices have been\npeeled (when ",Object(s.b)("inlineCode",{parentName:"p"},"finished == n"),"). Each step of the loop extracts the\nidentifiers in the next non-empty bucket using the ",Object(s.b)("inlineCode",{parentName:"p"},"B.next_bucket()"),"\nprimitive. This primitive returns a ",Object(s.b)("inlineCode",{parentName:"p"},"bucket")," object which consists the\nfollowing:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"identifiers"),": a sequence of identifiers contained in the extracted bucket"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"id"),": the id of the extracted bucket")),Object(s.b)("p",null,"The code first initializes a ",Object(s.b)("inlineCode",{parentName:"p"},"vertexSubset")," using the extracted\nidentifiers (vertices to be peeled), and increments the number of\nfinished vertices by the number of extracted identifiers."),Object(s.b)("h3",{id:"updating-the-induced-degrees"},"Updating the Induced Degrees"),Object(s.b)("p",null,"The next step is to compute the effect of peeling these vertices from\nthe graph has on their neighbors degrees. To do this we will use the\n",Object(s.b)("inlineCode",{parentName:"p"},"nghCount")," primitive provided by GBBS."),Object(s.b)("p",null,"First add the following ",Object(s.b)("inlineCode",{parentName:"p"},"EdgeMap")," declaration after the initialization\nof the bucket structure near the top of the function. This declaration\nconstructs a helper data-structure used to perform the ",Object(s.b)("inlineCode",{parentName:"p"},"nghCount"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"auto em = hist_table<uintE, uintE>(\n    std::make_tuple(UINT_E_MAX, 0), (size_t)G.m / 50);\n")),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"nghCount")," primitive takes as input"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"G"),": an input graph"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"active"),": a ",Object(s.b)("inlineCode",{parentName:"li"},"vertexSubset")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"cond_f"),": a boolean function"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"apply_f"),": a function from std::tuple<uintE, uintE> -> std::optional<std::tuple<uintE, uintE>>"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"em"),": a reference to the helper EdgeMap struct"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"flags"),": an optional flags parameter")),Object(s.b)("p",null,"It performs the following useful logic. It emits a value of ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mn",{parentName:"mrow"},"1")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},"1")))))," for\neach edge ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"u"),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(u,v)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"u"),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," where ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"u"),Object(s.b)("mo",{parentName:"mrow"},"\u2208"),Object(s.b)("mrow",{parentName:"mrow"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"a"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"c"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"t"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"i"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"v"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e"))),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"u \\in \\mathsf{active}")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"u"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"\u2208"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.67937em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"a"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"c"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"t"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"i"),Object(s.b)("span",{parentName:"span",className:"mord mathsf",style:{marginRight:"0.01389em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e"))))))," and ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"C"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")"),Object(s.b)("mo",{parentName:"mrow"},"="),Object(s.b)("mrow",{parentName:"mrow"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"t"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"r"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"u"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e"))),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"C(v) = \\mathsf{true}")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.07153em"}},"C"),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mclose"},")"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"="),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.57143em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"t"),Object(s.b)("span",{parentName:"span",className:"mord mathsf",style:{marginRight:"0.01389em"}},"r"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"u"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e")))))),". Next, the mapped values for each such ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"v")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v")))))," are reduced\nin parallel to obtain a single summed value, ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"R"),Object(s.b)("mi",{parentName:"msub"},"v"))),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R_v")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.00773em"}},"R"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.151392em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.00773em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault mtight",style:{marginRight:"0.03588em"}},"v")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))))))),". Finally, the\n",Object(s.b)("inlineCode",{parentName:"p"},"apply_f")," function is called on the pair ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"R"),Object(s.b)("mi",{parentName:"msub"},"v")),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(v, R_v)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.00773em"}},"R"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.151392em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.00773em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault mtight",style:{marginRight:"0.03588em"}},"v")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," to obtain an\noptional result ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"O")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.02778em"}},"O"))))),". The vertex, augmented value pair ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"v"),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("mi",{parentName:"mrow"},"o"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(v, o)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"o"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," is\nemitted to the output ",Object(s.b)("inlineCode",{parentName:"p"},"vertexSubset")," if and only if ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"O"),Object(s.b)("mo",{parentName:"mrow"},"="),Object(s.b)("mrow",{parentName:"mrow"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"S"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"o"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"m"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e")),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("mi",{parentName:"mrow"},"o"),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O = \\mathsf{Some}(o)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.02778em"}},"O"),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),Object(s.b)("span",{parentName:"span",className:"mrel"},"="),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"S"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"o"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"m"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e")),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord mathdefault"},"o"),Object(s.b)("span",{parentName:"span",className:"mclose"},")")))))," (i.e., a non-null option was returned)."),Object(s.b)("div",{style:{textAlign:"center"}},Object(s.b)("img",{alt:"kcore-figure",width:"400",src:Object(m.a)("/img/kcore/ngh_count.svg")})),"\xa0",Object(s.b)("p",null,"For example, consider the figure above. The green vertices are the\nvertices in ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"a"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"c"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"t"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"i"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"v"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\mathsf{active}")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.67937em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"a"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"c"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"t"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"i"),Object(s.b)("span",{parentName:"span",className:"mord mathsf",style:{marginRight:"0.01389em"}},"v"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e"))))))," in (1). Suppose ",Object(s.b)("inlineCode",{parentName:"p"},"cond_f")," returns\n",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"t"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"r"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"u"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\mathsf{true}")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.57143em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"t"),Object(s.b)("span",{parentName:"span",className:"mord mathsf",style:{marginRight:"0.01389em"}},"r"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"u"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e"))))))," for ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"v"),Object(s.b)("mn",{parentName:"msub"},"2")),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"v"),Object(s.b)("mn",{parentName:"msub"},"4")),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"v"),Object(s.b)("mn",{parentName:"msub"},"5"))),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v_2, v_4, v_5")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mtight"},"2")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mtight"},"4")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mtight"},"5")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"}))))))))))," and ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"f"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"a"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"l"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"s"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\mathsf{false}")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf",style:{marginRight:"0.06944em"}},"f"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"a"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"l"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"s"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e"))))))," for ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"v"),Object(s.b)("mn",{parentName:"msub"},"3")),Object(s.b)("mo",{parentName:"mrow",separator:"true"},","),Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"v"),Object(s.b)("mn",{parentName:"msub"},"6"))),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v_3, v_6")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mtight"},"3")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))),Object(s.b)("span",{parentName:"span",className:"mpunct"},","),Object(s.b)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03588em"}},"v"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mtight"},"6")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))))))),", and ",Object(s.b)("inlineCode",{parentName:"p"},"apply_f")," simply returns ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mrow",{parentName:"mrow"},Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"S"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"o"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"m"),Object(s.b)("mi",{parentName:"mrow",mathvariant:"sans-serif"},"e")),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(s.b)("msub",{parentName:"mrow"},Object(s.b)("mi",{parentName:"msub"},"R"),Object(s.b)("mi",{parentName:"msub"},"v")),Object(s.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\mathsf{Some}(R_v)")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"S"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"o"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"m"),Object(s.b)("span",{parentName:"span",className:"mord mathsf"},"e")),Object(s.b)("span",{parentName:"span",className:"mopen"},"("),Object(s.b)("span",{parentName:"span",className:"mord"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.00773em"}},"R"),Object(s.b)("span",{parentName:"span",className:"msupsub"},Object(s.b)("span",{parentName:"span",className:"vlist-t vlist-t2"},Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.151392em"}},Object(s.b)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.00773em",marginRight:"0.05em"}},Object(s.b)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),Object(s.b)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},Object(s.b)("span",{parentName:"span",className:"mord mathdefault mtight",style:{marginRight:"0.03588em"}},"v")))),Object(s.b)("span",{parentName:"span",className:"vlist-s"},"\u200b")),Object(s.b)("span",{parentName:"span",className:"vlist-r"},Object(s.b)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},Object(s.b)("span",{parentName:"span"})))))),Object(s.b)("span",{parentName:"span",className:"mclose"},")"))))),". The counts\nassociated with the red vertices in (2) show the vertices and their\nassociated values in the ",Object(s.b)("inlineCode",{parentName:"p"},"int vertexSubset")," that is emitted by the\n",Object(s.b)("inlineCode",{parentName:"p"},"nghCount")," primitive."),Object(s.b)("p",null,"Now that we understand the semantics of ",Object(s.b)("inlineCode",{parentName:"p"},"nghCount"),", we can use it to\ncompute the number of neighbors removed from each vertex. The\n",Object(s.b)("inlineCode",{parentName:"p"},"apply_f")," function will simply take the number of removed neighbors\nand perform the following steps:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"potentially update the coreness of this vertex in ",Object(s.b)("inlineCode",{parentName:"li"},"D")),Object(s.b)("li",{parentName:"ul"},"return the new bucket that the neighbor should be moved to, or a\nnull option if the neighbor does not need to be moved")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"auto apply_f = [&](const std::tuple<uintE, uintE>& p)\n    -> const std::optional<std::tuple<uintE, uintE> > {\n  uintE v = std::get<0>(p), edgesRemoved = std::get<1>(p);\n  uintE deg = D[v];\n  if (deg > k) {\n    uintE new_deg = std::max(deg - edgesRemoved, k);\n    D[v] = new_deg;\n    return wrap(v, B.get_bucket(new_deg));\n  }\n  return std::nullopt;\n};\n\nauto cond_f = [] (const uintE& u) { return true; };\nvertexSubsetData<uintE> moved = nghCount(\n    G, active, cond_f, apply_f, em, no_dense);\n")),Object(s.b)("p",null,"Note that the code above makes use of the bucketing optimization\ndescribed in the Julienne paper ","[1]",". Specifically, the implementation\nis optimized for the case where only a small number of buckets are\nprocessed, which is typically the case in practice. Thus, instead of\nmaintaining the identifiers stored in every single bucket, the\nimplementation only explicitly represents a prefix of the next ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"C")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"C")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.07153em"}},"C"))))),"\nmany buckets, for some user-specified parameter ",Object(s.b)("span",{parentName:"p",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"C")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"C")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.07153em"}},"C"))))),"."),Object(s.b)("p",null,"The key point for our implementation is that we can potentially skip\nupdating the bucketing structure for many vertices that had their\ndegree decreased. To find out whether we need to actually move this\nvertex to a bucket currently in the open range, , we call the\n",Object(s.b)("inlineCode",{parentName:"p"},"B.get_bucket")," primitive corresponding to the new bucket for this\nvertex (",Object(s.b)("inlineCode",{parentName:"p"},"new_deg"),"). If the bucketing data structure does not need to\nmove this vertex from its current bucket to the bucket corresponding\nto ",Object(s.b)("inlineCode",{parentName:"p"},"new_deg")," it returns a value of ",Object(s.b)("inlineCode",{parentName:"p"},"UINT_E_MAX"),", which the ",Object(s.b)("inlineCode",{parentName:"p"},"wrap"),"\nprimitive then ignores by returning ",Object(s.b)("inlineCode",{parentName:"p"},"std::nullopt"),"."),Object(s.b)("p",null,"Note that the other reason that a neighbor may not need to move\nbuckets is if it has already been peeled."),Object(s.b)("h3",{id:"updating-the-buckets"},"Updating the Buckets"),Object(s.b)("p",null,"The last step is to update the bucketing data structure with the new\nbuckets for each of the affected neighbors."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"B.update_buckets(moved);\n")),Object(s.b)("h2",{id:"the-finished-application"},"The Finished Application"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n\n#include "gbbs/gbbs.h"\n#include "gbbs/julienne.h"\n\nnamespace gbbs {\n\ntemplate <class Graph>\ninline sequence<uintE> KCore(Graph& G, size_t num_buckets = 16) {\n  const uintE n = G.n;\n  auto D = sequence<uintE>(n, [&](size_t i) {\n    return G.get_vertex(i).out_degree(); });\n\n  auto B = make_vertex_buckets(n, D, increasing, num_buckets);\n  auto em = hist_table<uintE, uintE>(\n      std::make_tuple(UINT_E_MAX, 0), (size_t)G.m / 50);\n\n  uintE finished = 0, rho = 0, k_max = 0;\n  while (finished != n) {\n    auto bkt = B.next_bucket();\n    auto active = vertexSubset(n, std::move(bkt.identifiers));\n    uintE k = bkt.id;\n    k_max = k;\n    rho++;\n    finished += active.size();\n\n    auto apply_f = [&](const std::tuple<uintE, uintE>& p)\n        -> const std::optional<std::tuple<uintE, uintE> > {\n      uintE v = std::get<0>(p), edgesRemoved = std::get<1>(p);\n      uintE deg = D[v];\n      if (deg > k) {\n        uintE new_deg = std::max(deg - edgesRemoved, k);\n        D[v] = new_deg;\n        return wrap(v, B.get_bucket(new_deg));\n      }\n      return std::nullopt;\n    };\n\n    auto cond_f = [] (const uintE& u) { return true; };\n    vertexSubsetData<uintE> moved = nghCount(\n        G, active, cond_f, apply_f, em, no_dense);\n\n    B.update_buckets(moved);\n  }\n\n  std::cout << "### rho = " << rho << " k_{max} = " << k_max << std::endl;\n  return D;\n}\n\n}  // namespace gbbs\n')),Object(s.b)("h2",{id:"compilation"},"Compilation"),Object(s.b)("p",null,"Using Bazel you can compile the application the KCore application as follows:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-sh"},"$ bazel build //benchmarks/KCore/KCore_tutorial/...\n")),Object(s.b)("p",null,"To use ",Object(s.b)("inlineCode",{parentName:"p"},"make")," you can copy the makefile from\n",Object(s.b)("inlineCode",{parentName:"p"},"benchmarks/KCore/JulienneDBS17/makefile"),", and run ",Object(s.b)("inlineCode",{parentName:"p"},"make"),"."),Object(s.b)("h2",{id:"testing"},"Testing"),Object(s.b)("p",null,"Let's try running our program on one of the test-inputs provided by Ligra in the ",Object(s.b)("inlineCode",{parentName:"p"},"inputs/"),"\ndirectory."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-sh"},"$ numactl -i all ./bazel-bin/benchmarks/KCore/KCore_tutorial/KCore_main \\\n    -s -rounds 4 inputs/rMatGraph_J_5_100\n# list_alloc init_blocks: 1000\n# after init:\n# Used: 0, allocated: 79872, node size: 16392, bytes: 1309261824\n### Application: KCore\n### Graph: inputs/rMatGraph_J_5_100\n### Threads: 144\n### n: 128\n### m: 708\n### Params: -nb (num_buckets) = 16 -fa (use fetch_and_add) = 0\n### ------------------------------------\n### rho = 21 k_{max} = 4\n### Running Time: 0.000540018\n...\n")),Object(s.b)("p",null,"The flags above indicate the following:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"The ",Object(s.b)("inlineCode",{parentName:"li"},"-s")," flag indicates that the graph is symmetric."),Object(s.b)("li",{parentName:"ul"},"The ",Object(s.b)("inlineCode",{parentName:"li"},"-rounds")," flag indicates the number of times to run the benchmark."),Object(s.b)("li",{parentName:"ul"},"The ",Object(s.b)("inlineCode",{parentName:"li"},"-nb")," flag indicates the number of open buckets the bucketing implementation should maintain.")),Object(s.b)("p",null,"Great! We've successfully implemented a work-efficient k-core\nalgorithm in GBBS. You should now have all of the pieces necessary to\nimplement your own bucketing-based algorithms in GBBS."),Object(s.b)("h2",{id:"references"},"References"),Object(s.b)("p",null,"[1]"," Laxman Dhulipala, Guy Blelloch, and Julian Shun",Object(s.b)("br",null),"\n",Object(s.b)("a",{parentName:"p",href:"https://ldhulipala.github.io/papers/Bucketing.pdf"},Object(s.b)("em",{parentName:"a"},"Julienne: A Framework for Parallel Graph Algorithms using Work-efficient Bucketing")),Object(s.b)("br",null),"\nProceedings of the ACM Symposium on Parallelism in Algorithms and Architectures (SPAA), pp. 293-304, 2017."),Object(s.b)("p",null,"[2]"," Laxman Dhulipala, Guy Blelloch, and Julian Shun",Object(s.b)("br",null),"\n",Object(s.b)("a",{parentName:"p",href:"https://ldhulipala.github.io/papers/gbbs_topc.pdf"},Object(s.b)("em",{parentName:"a"},"Theoretically Efficient Parallel Graph Algorithms Can Be Fast and Scalable")),Object(s.b)("br",null),"\nProceedings of the ACM Symposium on Parallelism in Algorithms and Architectures (SPAA), pp. 393-404, 2018. ",Object(s.b)("br",null)))}i.isMDXComponent=!0}}]);