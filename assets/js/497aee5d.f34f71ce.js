(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{120:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),m=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},l=function(e){var t=m(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,b=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),l=m(a),u=n,h=l["".concat(b,".").concat(u)]||l[u]||p[u]||s;return a?r.a.createElement(h,c(c({ref:t},o),{},{components:a})):r.a.createElement(h,c({ref:t},o))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,b=new Array(s);b[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var o=2;o<s;o++)b[o]=a[o];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},82:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return m}));var n=a(3),r=a(7),s=(a(0),a(120)),b={id:"overview",title:"Overview",description:"Overview of GBBS Benchmarks",permalink:"/docs/benchmarks/overview"},c={unversionedId:"benchmarks/overview",id:"benchmarks/overview",isDocsHomePage:!1,title:"Overview",description:"Overview of GBBS Benchmarks",source:"@site/docs/benchmarks/overview.md",slug:"/benchmarks/overview",permalink:"/gbbs/docs/benchmarks/overview",version:"current",sidebar:"docs",previous:{title:"Overview",permalink:"/gbbs/docs/library/overview"},next:{title:"Definitions",permalink:"/gbbs/docs/benchmarks/definitions"}},i=[{value:"Shortest Path Problems",id:"shortest-path-problems",children:[]},{value:"Connectivity Problems",id:"connectivity-problems",children:[]},{value:"Covering Problems",id:"covering-problems",children:[]},{value:"Substructure Problems",id:"substructure-problems",children:[]},{value:"Eigenvector Problems",id:"eigenvector-problems",children:[]}],o={toc:i};function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"This page specifies the graph problems considered in GBBS. Accessing\none of the benchmark pages below provides the following information:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Formal input-output specification of the problem."),Object(s.b)("li",{parentName:"ul"},"Algorithms solving the problem. Specifically, for each algorithm we provide:",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"Pointers to the code on github implementing the algorithm"),Object(s.b)("li",{parentName:"ul"},"Work and depth bounds of the algorithm"),Object(s.b)("li",{parentName:"ul"},"References to the papers/sources for the algorithm"))),Object(s.b)("li",{parentName:"ul"},"Examples of how to compile and run an implementation on a graph input.")),Object(s.b)("p",null,"We note that we are continuing to work on new benchmarks, and new\nimplementations of existing problems, and so the data here may only be\npartially complete (please check our ",Object(s.b)("a",{parentName:"p",href:"https://www.github.com/ParAlg/gbbs"},"github\nrepo")," for the latest state)."),Object(s.b)("h3",{id:"shortest-path-problems"},"Shortest Path Problems"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/breadth_first_search"},"Breadth-First Search")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/integral_weight_sssp"},"Integral-Weight SSSP")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/positive_weight_sssp"},"Positive-Weight SSSP")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/general_weight_sssp"},"General-Weight SSSP")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/ss_widest_path"},"Single-Source Widest Path")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/ss_betweenness_centrality"},"Single-Source Betwenness Centrality")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/sssp/spanner"},"Graph Spanner"))),Object(s.b)("h3",{id:"connectivity-problems"},"Connectivity Problems"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/connectivity/low_diameter_decomposition"},"Low-Diameter Decomposition")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/connectivity/connectivity"},"Connectivity")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/connectivity/biconnectivity"},"Biconnectivity")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/connectivity/strongly_connected_components"},"Strongly Connected Components")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/connectivity/minimum_spanning_forest"},"Minimum Spanning Forest"))),Object(s.b)("h3",{id:"covering-problems"},"Covering Problems"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/covering/maximal_independent_set"},"Maximal Independent Set (MIS)")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/covering/maximal_matching"},"Maximal Matching")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/covering/graph_coloring"},"Graph Coloring")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/covering/apx_set_cover"},"Approximate Set Cover"))),Object(s.b)("h3",{id:"substructure-problems"},"Substructure Problems"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/substructure/triangle_counting"},"Triangle Counting")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/substructure/k_clique_counting"},Object(s.b)("span",{parentName:"a",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),"-Clique Counting")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/substructure/k_core"},Object(s.b)("span",{parentName:"a",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),"-Core")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/substructure/k_truss"},Object(s.b)("span",{parentName:"a",className:"math math-inline"},Object(s.b)("span",{parentName:"span",className:"katex"},Object(s.b)("span",{parentName:"span",className:"katex-mathml"},Object(s.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mi",{parentName:"mrow"},"k")),Object(s.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),Object(s.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(s.b)("span",{parentName:"span",className:"base"},Object(s.b)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),Object(s.b)("span",{parentName:"span",className:"mord mathdefault",style:{marginRight:"0.03148em"}},"k"))))),"-Truss")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/substructure/apx_densest_subgraph"},"Approximate Densest Subgraph")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/substructure/low_outdegree_orientation"},"Low-Outdegree Orientation (Arboricity Ordering)"))),Object(s.b)("h3",{id:"eigenvector-problems"},"Eigenvector Problems"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/eigenvector/pagerank"},"PageRank")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/gbbs/docs/benchmarks/eigenvector/cosimrank"},"CoSimRank"))))}m.isMDXComponent=!0}}]);